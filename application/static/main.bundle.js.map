{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/socket.service.ts","./src/environments/environment.ts","./src/main.ts","ws (ignored)"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"\\n  <input [(ngModel)]=\\\"username\\\" type=\\\"text\\\">\\n  <input [(ngModel)]=\\\"password\\\" type=\\\"password\\\">\\n\\n  <button (click)=\\\"click()\\\">click</button>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { SocketService } from './socket.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  username:any;\n  password:any;\n\n  constructor(private socketService: SocketService){\n    this.socketService.sendMessage(\"hello server\");\n\t}\n\n  click(){\n    this.socketService.sendMessage(\"hello server\");\n    alert(this.username + \" \" + this.password);\n  }\n\n\ttitle = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { SocketService } from './socket.service';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [SocketService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Injectable } from '@angular/core';\nimport * as io from 'socket.io-client';\n\n@Injectable()\nexport class SocketService {\n  private url = 'http://localhost:5000';\n  private socket;\n\n  constructor() {\n    if(window.location.href==\"http://localhost:4200/\"||\n        window.location.href==\"http://localhost:4200\"){\n      this.socket = io(\"http://127.0.0.1:5000/\");\n    }else if(window.location.href==\"http://localhost:5000/\"||\n        window.location.href==\"http://localhost:5000\"){\n      this.socket = io(\"http://127.0.0.1:5000/\");\n    }else{\n      this.socket = io(\"https://tsoha-harkka.herokuapp.com/\");\n    }\n    console.log(window.location.href);\n\n    this.socket.on('connect', () => {\n      console.log(\"connected\");\n    });\n\n    this.socket.on('message', (data) => {\n      console.log(\"got message\");\n      console.log(data);\n    });\n  }\n\n  public sendMessage(message) {\n    this.socket.emit('message', message);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/socket.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ws (ignored)\n// module id = 1\n// module chunks = main"],"sourceRoot":"webpack:///"}